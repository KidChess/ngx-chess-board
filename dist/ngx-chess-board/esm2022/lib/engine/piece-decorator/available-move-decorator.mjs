import { MoveUtils } from '../../utils/move-utils';
import { PieceAbstractDecorator } from './piece-abstract-decorator';
export class AvailableMoveDecorator extends PieceAbstractDecorator {
    pointClicked;
    color;
    board;
    constructor(piece, pointClicked, color, board) {
        super(piece);
        this.pointClicked = pointClicked;
        this.color = color;
        this.board = board;
    }
    getPossibleCaptures() {
        return this.piece
            .getPossibleCaptures()
            .filter((point) => !MoveUtils.willMoveCauseCheck(this.color, this.pointClicked.row, this.pointClicked.col, point.row, point.col, this.board));
    }
    getPossibleMoves() {
        return this.piece
            .getPossibleMoves()
            .filter((point) => !MoveUtils.willMoveCauseCheck(this.color, this.pointClicked.row, this.pointClicked.col, point.row, point.col, this.board));
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXZhaWxhYmxlLW1vdmUtZGVjb3JhdG9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LWNoZXNzLWJvYXJkL3NyYy9saWIvZW5naW5lL3BpZWNlLWRlY29yYXRvci9hdmFpbGFibGUtbW92ZS1kZWNvcmF0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0EsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBRW5ELE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBRXBFLE1BQU0sT0FBTyxzQkFBdUIsU0FBUSxzQkFBc0I7SUFDdEQsWUFBWSxDQUFRO0lBQ3BCLEtBQUssQ0FBUTtJQUNiLEtBQUssQ0FBUTtJQUVyQixZQUFZLEtBQW9CLEVBQUUsWUFBbUIsRUFBRSxLQUFZLEVBQUUsS0FBWTtRQUM3RSxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDYixJQUFJLENBQUMsWUFBWSxHQUFHLFlBQVksQ0FBQztRQUNqQyxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUNuQixJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztJQUN2QixDQUFDO0lBRUQsbUJBQW1CO1FBQ2YsT0FBTyxJQUFJLENBQUMsS0FBSzthQUNaLG1CQUFtQixFQUFFO2FBQ3JCLE1BQU0sQ0FDSCxDQUFDLEtBQUssRUFBRSxFQUFFLENBQ04sQ0FBQyxTQUFTLENBQUMsa0JBQWtCLENBQ3pCLElBQUksQ0FBQyxLQUFLLEVBQ1YsSUFBSSxDQUFDLFlBQVksQ0FBQyxHQUFHLEVBQ3JCLElBQUksQ0FBQyxZQUFZLENBQUMsR0FBRyxFQUNyQixLQUFLLENBQUMsR0FBRyxFQUNULEtBQUssQ0FBQyxHQUFHLEVBQ1QsSUFBSSxDQUFDLEtBQUssQ0FDYixDQUNSLENBQUM7SUFDVixDQUFDO0lBRUQsZ0JBQWdCO1FBQ1osT0FBTyxJQUFJLENBQUMsS0FBSzthQUNaLGdCQUFnQixFQUFFO2FBQ2xCLE1BQU0sQ0FDSCxDQUFDLEtBQUssRUFBRSxFQUFFLENBQ04sQ0FBQyxTQUFTLENBQUMsa0JBQWtCLENBQ3pCLElBQUksQ0FBQyxLQUFLLEVBQ1YsSUFBSSxDQUFDLFlBQVksQ0FBQyxHQUFHLEVBQ3JCLElBQUksQ0FBQyxZQUFZLENBQUMsR0FBRyxFQUNyQixLQUFLLENBQUMsR0FBRyxFQUNULEtBQUssQ0FBQyxHQUFHLEVBQ1QsSUFBSSxDQUFDLEtBQUssQ0FDYixDQUNSLENBQUM7SUFDVixDQUFDO0NBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCb2FyZCB9IGZyb20gJy4uLy4uL21vZGVscy9ib2FyZCc7XG5pbXBvcnQgeyBDb2xvciB9IGZyb20gJy4uLy4uL21vZGVscy9waWVjZXMvY29sb3InO1xuaW1wb3J0IHsgUG9pbnQgfSBmcm9tICcuLi8uLi9tb2RlbHMvcGllY2VzL3BvaW50JztcbmltcG9ydCB7IE1vdmVVdGlscyB9IGZyb20gJy4uLy4uL3V0aWxzL21vdmUtdXRpbHMnO1xuaW1wb3J0IHsgQWJzdHJhY3RQaWVjZSB9IGZyb20gJy4vYWJzdHJhY3QtcGllY2UnO1xuaW1wb3J0IHsgUGllY2VBYnN0cmFjdERlY29yYXRvciB9IGZyb20gJy4vcGllY2UtYWJzdHJhY3QtZGVjb3JhdG9yJztcblxuZXhwb3J0IGNsYXNzIEF2YWlsYWJsZU1vdmVEZWNvcmF0b3IgZXh0ZW5kcyBQaWVjZUFic3RyYWN0RGVjb3JhdG9yIHtcbiAgICBwcml2YXRlIHBvaW50Q2xpY2tlZDogUG9pbnQ7XG4gICAgcHJpdmF0ZSBjb2xvcjogQ29sb3I7XG4gICAgcHJpdmF0ZSBib2FyZDogQm9hcmQ7XG5cbiAgICBjb25zdHJ1Y3RvcihwaWVjZTogQWJzdHJhY3RQaWVjZSwgcG9pbnRDbGlja2VkOiBQb2ludCwgY29sb3I6IENvbG9yLCBib2FyZDogQm9hcmQpIHtcbiAgICAgICAgc3VwZXIocGllY2UpO1xuICAgICAgICB0aGlzLnBvaW50Q2xpY2tlZCA9IHBvaW50Q2xpY2tlZDtcbiAgICAgICAgdGhpcy5jb2xvciA9IGNvbG9yO1xuICAgICAgICB0aGlzLmJvYXJkID0gYm9hcmQ7XG4gICAgfVxuXG4gICAgZ2V0UG9zc2libGVDYXB0dXJlcygpOiBQb2ludFtdIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucGllY2VcbiAgICAgICAgICAgIC5nZXRQb3NzaWJsZUNhcHR1cmVzKClcbiAgICAgICAgICAgIC5maWx0ZXIoXG4gICAgICAgICAgICAgICAgKHBvaW50KSA9PlxuICAgICAgICAgICAgICAgICAgICAhTW92ZVV0aWxzLndpbGxNb3ZlQ2F1c2VDaGVjayhcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY29sb3IsXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnBvaW50Q2xpY2tlZC5yb3csXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnBvaW50Q2xpY2tlZC5jb2wsXG4gICAgICAgICAgICAgICAgICAgICAgICBwb2ludC5yb3csXG4gICAgICAgICAgICAgICAgICAgICAgICBwb2ludC5jb2wsXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmJvYXJkXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICk7XG4gICAgfVxuXG4gICAgZ2V0UG9zc2libGVNb3ZlcygpOiBQb2ludFtdIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucGllY2VcbiAgICAgICAgICAgIC5nZXRQb3NzaWJsZU1vdmVzKClcbiAgICAgICAgICAgIC5maWx0ZXIoXG4gICAgICAgICAgICAgICAgKHBvaW50KSA9PlxuICAgICAgICAgICAgICAgICAgICAhTW92ZVV0aWxzLndpbGxNb3ZlQ2F1c2VDaGVjayhcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY29sb3IsXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnBvaW50Q2xpY2tlZC5yb3csXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnBvaW50Q2xpY2tlZC5jb2wsXG4gICAgICAgICAgICAgICAgICAgICAgICBwb2ludC5yb3csXG4gICAgICAgICAgICAgICAgICAgICAgICBwb2ludC5jb2wsXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmJvYXJkXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICk7XG4gICAgfVxufVxuIl19