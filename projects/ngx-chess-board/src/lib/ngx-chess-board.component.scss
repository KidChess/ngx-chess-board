/*========================================*/
/*----------------global color definitions*/
/*========================================*/
$white-primary: rgba(255, 255, 255, 1);
$black-primary: rgba(0, 0, 0, 1);
$blue-primary: #6495ed;
$bar: #5aafcd;
$red-primary: #ff0000;
$yellow-primary: #ffd700;
$green-primary: #99c13c;
// $green-primary: darken(#40ff40, 15%);
$purple-primary: #7864ed;
$white-primary-translucent: transparentize(
    $color: $white-primary,
    $amount: 0.2,
);
$black-primary-translucent: transparentize(
    $color: $black-primary,
    $amount: 0.4,
);
$blue-primary-translucent: transparentize(
    $color: $blue-primary,
    $amount: 0.2,
);

#board {
    font-family: 'Courier New', serif;
    position: relative;
}

.board-row {
    display: block;
    width: 100%;
    height: 12.5%;
    position: relative;
}

.board-col {
    position: relative;
    display: inline-block;
    width: 12.5%;
    vertical-align: top;
    cursor: default;
    height: 100%;
}

.piece {
    height: 100%;
    cursor: grab;
    width: 100%;
    user-select: none;
    -webkit-user-select: none;
    background-size: cover;
    justify-content: center;
    text-align: center;
    //margin-top: -10px;
    color: black !important;
    box-sizing: border-box;
}

.piece::after {
    content: '\200b';
    box-sizing: border-box;
}

#drag {
    height: 100%;
    // border: 3px solid blue;
    width: 100%;
}

.possible-point {
    background: radial-gradient(#13262f 15%, transparent 20%);
}

.possible-point:hover,
.possible-capture:hover {
    opacity: 0.4;
}

.possible-capture {
    background: radial-gradient(transparent 0%, transparent 80%, #13262f 80%);
    opacity: 0.5;
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

.king-check {
    background: radial-gradient(
        ellipse at center,
        red 0%,
        #e70000 25%,
        rgba(169, 0, 0, 0) 89%,
        rgba(158, 0, 0, 0) 100%
    );
}

.current-selection {
    background-color: #72620b !important;
}

.yCoord {
    position: absolute;
    user-select: none;
    -webkit-user-select: none;
    cursor: pointer;
    right: 0.2em;
    font-family: 'Lucida Console', Courier, monospace;
    box-sizing: border-box;
}

.xCoord {
    position: absolute;
    user-select: none;
    -webkit-user-select: none;
    cursor: pointer;
    left: 0.2em;
    bottom: 0;
    font-family: 'Lucida Console', Courier, monospace;
    box-sizing: border-box;
}

.hovering {
    background-color: red !important;
}

.arrow {
    stroke-width: 2;
    opacity: 0;
    animation: fadeInArrow 0.2s ease-in-out forwards;
    stroke-width: 4.5 !important;
    border-radius: 10px !important;
    stroke-linecap: round !important;
}

@keyframes fadeInArrow {
    0% {
        opacity: 0;
    }
    100% {
        opacity: 1;
    }
}

svg {
    filter: drop-shadow(1px 1px 0px #111) drop-shadow(-1px 1px 0px #111) drop-shadow(1px -1px 0px #111)
        drop-shadow(-1px -1px 0px #111);
    animation: fadeInShadow 0.2s ease-in-out forwards;
}

@keyframes fadeInShadow {
    0% {
        filter: drop-shadow(1px 1px 0px #111) drop-shadow(-1px 1px 0px #111) drop-shadow(1px -1px 0px #111)
            drop-shadow(-1px -1px 0px #111);
    }
    100% {
        filter: drop-shadow(1px 1px 0px #111) drop-shadow(-1px 1px 0px #111) drop-shadow(1px -1px 0px #111)
            drop-shadow(-1px -1px 0px #111);
    }
}

//styles for ngx-chess-board arrows and circles
#board svg {
    z-index: 1000 !important;
    filter: drop-shadow(1px 1px 2px rgba(0, 0, 0, 0.2)) drop-shadow(-1px 1px 2px rgba(0, 0, 0, 0.2))
        drop-shadow(1px -1px 2px rgba(0, 0, 0, 0.2)) drop-shadow(-1px -1px 2px rgba(0, 0, 0, 0.2)) !important;
}

#greenArrow path,
#redArrow path,
#blueArrow path,
#orangeArrow path {
    d: path('M 4 2.5 L 4 9.5 L 10 6 L 4 2.5 z');
}

circle {
    stroke-width: 4.5 !important;
}

circle[stroke='blue'] {
    stroke: $blue-primary !important;
}

circle[stroke='green'] {
    stroke: $green-primary !important;
}

circle[stroke='orange'] {
    stroke: $yellow-primary !important;
}

line[stroke='blue'] {
    stroke: $blue-primary !important;
}

line[stroke='green'] {
    stroke: $green-primary !important;
}

line[stroke='orange'] {
    stroke: $yellow-primary !important;
}

#blueArrow path {
    fill: $blue-primary !important;
}

#greenArrow path {
    fill: $green-primary !important;
}

#orangeArrow path {
    fill: $yellow-primary !important;
}

:host {
    display: inline-block !important;
}

.single-piece {
    position: absolute;
    z-index: 999;
    justify-content: center;
    text-align: center;
    user-select: none;
    -webkit-user-select: none;
    //-webkit-transition: all 1s ease-in-out;
    //-moz-transition: all 1s ease-in-out;
    //-o-transition: all 1s ease-in-out;
    //-ms-transition: all 1s ease-in-out;
    color: black !important;
    cursor: grab;
    background-size: cover;
}

.single-piece::after {
    content: '\200b';
    box-sizing: border-box;
}
.cdk-drag:not(.cdk-drag-dragging) {
    transition: transform 200ms cubic-bezier(0, 0.3, 0.14, 0.49);
}
